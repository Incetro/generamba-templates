{% include 'header' %}

import UIKit
import Designable

// MARK: - {{ custom_parameters.cell }}Cell

final {{ privacy }}class {{ custom_parameters.cell }}Cell: UITableViewCell {

    // MARK: - Properties

    // MARK: - UITableViewCell

    required {{ privacy }}init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override {{ privacy }}init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        designer.add(designable: self, for: \.{{ cell_uncap }}CellAppearance)
    }

    override {{ privacy }}func prepareForReuse() {
        super.prepareForReuse()
    }

    // MARK: - Useful

    {{ privacy }}func setup(with viewModel: {{ custom_parameters.cell }}CellViewModelProtocol) {
    }
}

// MARK: - Setup

private extension {{ custom_parameters.cell }}Cell {

    func setup() {
    }
}

// MARK: - Actions

private extension {{ custom_parameters.cell }}Cell {
}

// MARK: - Designable

extension {{ custom_parameters.cell }}Cell: Designable {

    {{ privacy }}func design(appearance: {{ custom_parameters.cell }}CellAppearance) {
        backgroundColor = appearance.backgroundColor
    }
}

// MARK: - Constants

{{ privacy }}extension {{ custom_parameters.cell }}Cell {

    enum Constants {
    }
}
