{% include 'header' %}

import UIKit
import VIPER
import Designable
import Localizable
import TransitionHandler

// MARK: - {{ prefix }}{{ module_info.name }}ViewController

final {{ privacy }}class {{ prefix }}{{ module_info.name }}ViewController: UIViewController {

    // MARK: - Properties

    /// Table with {{ custom_parameters.cell }} cells
    let tableView = UITableView().then {
        $0.separatorStyle = .none
    }

    /// Presenter instance
    var output: {{ prefix }}{{ module_info.name }}ViewOutput?

    // MARK: - ViewController

    override {{ privacy }}func viewDidLoad() {
        super.viewDidLoad()
        designer.add(designable: self, for: \.{{ prefix }}{{ module_name_uncap }}ViewControllerAppearance)
        localizer.add(localizable: self)
        output?.didTriggerViewReadyEvent()
        setup()
    }

    // MARK: - Private
}

// MARK: - Setup

private extension {{ prefix }}{{ module_info.name }}ViewController {

    func setup() {
        setupTableView()
    }

    /// Cards table view setup
    func setupTableView() {
        view.addSubview(tableView.prepareForAutolayout())
        tableView.pinToSuperview()
    }
}

// MARK: - Actions

private extension {{ prefix }}{{ module_info.name }}ViewController {
}

// MARK: - {{ prefix }}{{ module_info.name }}ViewInput

extension {{ prefix }}{{ module_info.name }}ViewController: {{ prefix }}{{ module_info.name }}ViewInput {

    {{ privacy }}func setupInitialState() {
    }
}

// MARK: - ViperViewOutputProvider

extension {{ prefix }}{{ module_info.name }}ViewController: ViewOutputProvider {

    {{ privacy }}var viewOutput: ModuleInput? {
        output as? ModuleInput
    }
}

// MARK: - Localizable

extension {{ prefix }}{{ module_info.name }}ViewController: Localizable {

    {{ privacy }}func localize() {
    }
}

// MARK: - Designable

extension {{ prefix }}{{ module_info.name }}ViewController: Designable {

    {{ privacy }}func design(appearance: {{ prefix }}{{ module_info.name }}ViewControllerAppearance) {
        view.backgroundColor = appearance.backgroundColor
    }
}

// MARK: - Constants

{{ privacy }}extension {{ prefix }}{{ module_info.name }}ViewController {

    enum Constants {
    }
}
